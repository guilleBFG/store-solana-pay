import Head from "next/head";
import Image from "next/image";

import React, { useEffect, useState } from "react";
import HeroButton from "../components/HeroButton";
import Product from "../components/Product";
import CreateProduct from "../components/CreateProduct";

import { Icon } from "@iconify/react";
import { useWallet } from "@solana/wallet-adapter-react";
import { WalletMultiButton } from "@solana/wallet-adapter-react-ui";

import styles from "../styles/Home.module.css";

// Constants
const TWITTER_HANDLE = "_buildspace";
const TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;
export default function Home() {
  // This will fetch the users' public key (wallet address) from any wallet we support
  const { publicKey } = useWallet();
  const [products, setProducts] = useState([]);
  const [creating, setCreating] = useState(false);

  const isOwner = publicKey
    ? publicKey.toString() === process.env.NEXT_PUBLIC_OWNER_PUBLIC_KEY
    : false;
  const renderNotConnectedContainer = () => (
    <div>
      <Image
        src="https://media4.giphy.com/media/yAYZnhvY3fflS/giphy.gif"
        alt="gif"
        width="600"
        height="400"
      ></Image>
      <div className="ml-56 text-center">
        <WalletMultiButton className="font-bold text-xl bg-gradient-to-r from-green-800 to-blue-500 hover:from-red-800 hover:to-red-500" />
      </div>
    </div>
  );

  const renderItemBuyContainer = () => (
    <div className="p-4 grid grid-cols-2 gap-4 col-[2_/_span_2]">
      {products.map((product) => (
          <Product key={product.id} product={product} />
      ))}
    </div>
  );
  const renderCloseButton = () => (
    <div className="p-4">
      <button
        type="button"
        className="rounded-full p-4 bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500 text-red-900 font-bold"
      >
        Close
      </button>
    </div>
  );
  const renderCreateProductButton = () => (
    <button
      type="button"
      className="rounded-full p-4 bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500 text-white font-bold"
    >
      Create Product
    </button>
  );

  useEffect(() => {
    if (publicKey) {
      fetch("/api/fetchProducts")
        .then((response) => response.json())
        .then((data) => {
          setProducts(data);
          console.log("products", data);
        });
    }
  }, [publicKey]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Crypto Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <HeroButton />
        {isOwner && (
          <button onClick={() => setCreating(!creating)}>
            {creating ? renderCloseButton() : renderCreateProductButton()}
          </button>
        )}
        {creating && <CreateProduct />}
        {publicKey ? renderItemBuyContainer() : renderNotConnectedContainer()}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
        <div className="text-left text-white font-semibold italic font-sans flex">
          <Icon icon="icon-park:twitter" width="25" height="25" />
          <a
            className="ml-3"
            href={TWITTER_LINK}
            target="_blank"
            rel="noreferrer"
          >
            {` Build on @${TWITTER_HANDLE}`}
            <Icon className="ml-4" icon="noto:unicorn" width="25" height="25" />
          </a>
        </div>
      </footer>
    </div>
  );
}
